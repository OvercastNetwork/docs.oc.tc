.container
    .jumbotron.subhead
        %h1= @page_title = "Modules"
        %p.lead Filters & Regions
    %section
        .row
            = partial('modules_sidebar')
            .col-sm-9
                .page-header
                    %h1= @page_sub_title = "Regions"
                :markdown
                    Regions are used to define, among other things, the area a filter applies to or where a portal links from.

                    The area a region applies to is specified with one or more of the following elements. Use `oo` and `-oo` to specify positive/negative infinity in coordinates. All regions and region modifiers can have a `name=""` attribute to reference them from kits, portals, etc.

                    Note that Y is the up/down axis in minecraft, instead of Z like most coordinate systems.

                .table-responsive
                    %table.table.table-striped.table-condensed
                        %tbody
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<rectangle name="abc" min="X1,Z1" max="X2,Z2"/>')
                                    %br
                                    A rectangle from <code>X1,Z1</code> to <code>X2,Z2</code>
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<cuboid name="abc" min="X1,Y1,Z1" max="X2,Y2,Z2"/>')
                                    %br
                                    A rectangular solid from <code>X1,Y1,Z1</code> to <code>X2,Y2,Z2</code>
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<circle name="abc" center="X,Z" radius="R"/>')
                                    %br
                                    A circle located at <code>X,Z</code> with a radius of <code>R</code> </br>
                                    %i The region goes from 0 to map height, i.e. PGM doesn't check the players Y position
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<cylinder name="abc" base="X,Y,Z" radius="R" height="H"/>')
                                    %br
                                    A cylinder located at <code>X,Z,Y</code> with a radius of <code>R</code> and a height of <code>H</code>
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<sphere name="abc" origin="X,Y,Z" radius="R"/>')
                                    %br
                                    A sphere located at <code>X,Y,Z</code> with a radius of <code>R</code>
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<block name="abc">X,Y,Z</block>')
                                    %br
                                    A single block located at <code>X,Y,Z</code>
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<empty name="abc"/>')
                                    %br
                                    A zero size/position region
                :markdown


                    `TIP:` Use the worldedit wand to help in defining region coordinates. Select an area and do `/size`, it will display two 3D coordinates. To use these coordinates you will have to take whichever X value is higher and add one to it, and then do the same for Y and Z. This is because PGM checks from the centre of blocks and WE checks from the corners. You don't have to do this for elements with just one coordinate such as: `<block>` or `<sphere>`.

                    For example: `min="49,13,-4" max="37,10,4"` would become `min="50,14,-4" max="37,10,5"`.
                    <!--![Regions](./images/selections.png)-->

                    <br/>
                    #### Referencing a Named Region 

                    Similar to kits regions are referenced by their `name=""`.
                    To use regions in spawns, portals, etc., reference them by their name.

                        <regions>
                            <rectangle name="named-region" min="-50,-50" max="50,50"/>
                        </regions>

                        <!-- Region reference -->
                        <region name="named-region"/>

                    <br/>
                    #### Applying Filters, Kits, and Velocity to Regions

                    Filters, kits, and velocity changes are applied to regions as attributes of the `<apply>` element. The apply element can contain more than one region. If the apply element contains more than one region the same settings applied to all of them.

                    The order in which apply elements are specified determines which takes precedence when regions overlap. Applies specified first override those specified further down in the XML.

                        <apply><region name="region1"/>..</apply>
                        
                    
                    ##### Apply Element Attributes
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Attribute
                                %th Description
                                %th Value
                        %tbody
                            %tr
                                %td
                                    %code enter
                                %td Filter player enter events.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code leave
                                %td Filter player leave events.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code block
                                %td Filter block place and break events.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code block-place
                                %td Filter block place events.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code block-place-against
                                %td Filter block place against events.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code block-break
                                %td Filter block break events.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code use
                                %td Filter right-click events.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code kit
                                %td Give a kit to players entering the region.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name
                            %tr
                                %td
                                    %code message
                                %td Send a message to the player if the filter modifies the event.
                                %td
                                    %span.label.label-primary String
                            %tr
                                %td
                                    %code velocity
                                %td Modify or set a players velocity when they enter the region.
                                %td
                                    %span.label.label-primary X,Y,Z
                            %tr
                                %td
                                    %code filter
                                %td Only applies kits and velocities depending on the filter output.
                                %td
                                    %a{:href => "/modules/filter"} Filter Name


                :markdown

                    <br/>
                    #### [Example Regions](id:regionExamples)

                    Applying kits to a region:

                        <!-- Give a kit to players entering the region -->
                        <apply kit="knight">
                            <region name="r-knight"/>
                            <region name="b-knight"/>
                        </apply>

                    Applying filters to a region:

                        <filter name="only-blue">
                            <team>blue</team>
                        </filter>

                        <regions>
                            <!-- Blue Team Base -->
                            <!-- This cuboid region has the filter named 'only-blue' applied to it. -->
                            <apply enter="only-blue" message="You may not enter the enemy team's base!">
                                <cuboid min="49,13,4" max="37,10,-4"/>
                            </apply>
                            <apply block="deny-all" message="You may not modify the base!">
                                <cuboid min="50,14,-5" max="36,7,5"/>
                            </apply>
                            
                            <!-- Blue Team Tree -->
                            <apply block="deny-all" message="This tree is protected, go figure.">
                                <cylinder base="83.5,0,-47.5" radius="4" height="40"/>
                            </apply>
                        </regions>
                        
                    Multiple filters can be applied to a region at the same time by using different apply attributes.  
                    Example from [Boom](https://maps.oc.tc/DTM/Standard/Boom/map.xml), it uses the `block-break` and `block-place` attributes on the same apply tag.
                    
                        <apply block-break="only-sandstone-stairs" block-place="deny-all" message="You may not modify the TNT spawning area">
                            <rectangle min="-6,-58" max="7,-47"/>
                            <rectangle min="-6,48" max="7,59"/>
                        </apply>


                    Example regions from Harb using [region modifier](#regionModifiers).

                        <regions>
                            <rectangle name="main-area" min="-50,-32" max="51,33"/>
                            <union name="bases">
                                <rectangle name="blue-base" min="-20,-62" max="21,-32"/>
                                <rectangle name="red-base" min="-20,33" max="21,63"/>
                            </union>
                            <complement name="portals-area">
                                <rectangle min="-56,-2" max="57,3"/>
                                <region name="main-area"/>
                            </complement>
                            <apply block="deny-all">
                                <!-- Protect portal areas -->
                                <region name="portals-area"/>
                            </apply>
                            <apply block="no-tnt" message="You may not place TNT in the bases.">
                                <region name="bases"/>
                            </apply>
                        </regions>

                    <br/>
                    Velocity can be applied in two ways, either by modifying the player's current velocity or by setting an exact value. The velocity is specified as a `X,Y,Z` vector. To set an exact velocity vector, put `@` only in front of the first value.

                    `NOTE:` Modifying a players velocity is currently broken and will just set it. 
                    
                    Partial example from [SuperPRISM](https://maps.oc.tc/TDM/Standard/SuperPRISM/map.xml), using velocity for jump pads

                        <regions>
                            <!--  Yellow Pads  -->
                            <apply velocity="@-0.4,1.1,0.0">
                                <cuboid min="-1081,1,-2116" max="-1078,2,-2113"/>
                            </apply>
                            <apply velocity="@0.0,1.4,-0.4">
                                <cuboid min="-1062,1,-2123" max="-1059,2,-2120"/>
                            </apply>
                        </regions>

                    <br/>
                    ### [Region Modifiers](id:regionModifiers)

                    Regions can be inverted, combined, subtracted, or intersected by putting them inside of the following elements.

                .table-responsive
                    %table.table.table-striped.table-condensed
                        %tbody
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<negative><region name="region1"/></negative>')
                                    %br
                                    Inverse of a region.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape(' <union><region name="region1"/><region name="region2"/>..</union>')
                                    %br
                                    Combination of multiple regions.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<complement><region name="region1"/><region name="region2"/>..</complement>')
                                    %br
                                    Subtracts successive regions from the first defined region.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<intersect><region name="region1"/><region name="region2"/>..</intersect>')
                                    %br
                                    Returns the area that multiple regions intersect with.

                :markdown
                    ![Region Combinations .png](/img/regions.png)

                    Regions can be translated or mirrored with the following elements. When translating or mirroring a region the original is not modified instead a copy is created.

                .table-responsive
                    %table.table.table-striped.table-condensed
                        %tbody
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<translate offset="X,Y,Z"><region name="region1"/></translate>')
                                    %br
                                    Copy and translate a region by <code>X,Y,Z</code> blocks.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<mirror normal="1,0,1" origin="100,50,0"><region name="region1"/></mirror>')
                                    %br
                                    Copy and mirror region by a axis around a point.

                :markdown
                    <br/>
                    Example

                        <regions>
                            <!-- Blue Team Base -->
                            <apply enter="only-blue" message="You may not enter the enemy team's base!">
                                <union>
                                    <cuboid min="-20,8,-75" max="11,41,-79"/>
                                    <cuboid min="8,8,-80" max="13,41,-75"/>
                                </union>
                            </apply>
                        </regions>

                        <regions>
                            <apply block="deny-all" message="You may not under-bridge!">
                                <cuboid name="red-underside" min="-oo,-oo,-oo" max="oo,41,40"/>
                                <mirror origin="116,44,93" normal="0,0,1">
                                    <region name="red-underside"/>
                                </mirror>
                                <cuboid min="-oo,-oo,-oo" max="oo,37,oo"/>
                            </apply>
                        </regions>



                    <br/>
                    ### [Point Providers](id:pointProviders)

                    A point provider is used to modify the position returned by a region to include the direction a player ends up facing when spawned, etc.
                    Input can be a region, a region modifier or simply an exact `X,Y,Z` coordinate.

                        <point yaw="90" pitch="50">X,Y,Z</point>

                    ##### Point Attributes
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Attribute
                                %th Description
                                %th Value 
                        %tbody
                            %tr
                                %td
                                    %code region
                                %td 
                                    The region the point provider modifies.
                                    %br
                                    %i 
                                        Can also be defined in a 
                                        %code= html_escape('<region>')
                                        sub-element.
                                %td
                                    %a{:href => "/modules/regions"} Regions
                            %tr
                                %td
                                    %code yaw
                                %td
                                    Specifies what direction the player is looking horizontally from -180&deg; to 180&deg;.
                                    %br
                                    %i South 0&deg;, East -90&deg;, North 180&deg; and West 90&deg;.
                                %td 
                                    %span.label.label-primary -180 to 180
                            %tr
                                %td
                                    %code pitch
                                %td
                                    Specifies what direction the player is looking vertically from -90&deg; to 90&deg;.
                                    %br
                                    %i -90&deg; is straight up 90&deg; is straight down.
                                %td 
                                    %span.label.label-primary -90 to 90
                            %tr
                                %td
                                    %code angle
                                %td
                                    Specify the exact block coordinates that the player should look at.
                                    %br
                                    %i This attribute will negate any angles set by the <code>yaw</code> and <code>pitch</code> attributes.
                                %td 
                                    %span.label.label-primary X,Y,Z

                :markdown

                    `NOTE:` The pitch and yaw arguments can also accept a `X,Y,Z` coordinate.  
                    `TIP:` Copy the yaw from the F3 screen in minecraft (labled as `f`).  

