.container
    .jumbotron.subhead
        %h1
            = @page_title = "Modules"
            %p.lead Filters & Regions
    %section
        .row
            = partial('modules_sidebar')
            .col-sm-9
                .page-header
                    %h1= @page_sub_title = "Regions"
                :markdown
                    Regions are a type of filter that filters the coordinates of a query. They are used to define, among other things, the area a filter applies to or where a portal links from. There are two distinct types of regions; block bounded regions, which contain a finite amount of blocks and unbounded regions that contain a infinite amount. All regions and region modifiers can have a `id` attribute to reference them from kits, portals, etc.

                        <regions>
                            <rectangle id="xyzzy-region" min="-50,-50" max="50,50"/>
                        </regions>

                        <!-- Region reference -->
                        <region id="xyzzy-region"/>


                    The area a region applies to is specified with one or more of the following elements. Use `oo` and `-oo` to specify positive/negative infinity in coordinates. See the [Properly Defining Regions](/guides/regions) guide for information on how to properly get the coordinates of a region.

                    ##### Region Types
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Block Bounded Regions
                            %tr
                        %tbody
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<cuboid id="abc" min="X1,Y1,Z1" max="X2,Y2,Z2"/>')
                                    %br
                                    A rectangular solid from <code>X1,Y1,Z1</code> to <code>X2,Y2,Z2</code>.
                                    %br
                                    %i Only block bounded when using finite coordinates.
                                %td.text-right
                                    %span.label.label-primary Randomize-able
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<cylinder id="abc" base="X,Y,Z" radius="R" height="H"/>')
                                    %br
                                    A cylinder located at <code>X,Z,Y</code> with a radius of <code>R</code> and a height of <code>H</code>.
                                    %br
                                    %i Only block bounded when using a finite radius.
                                %td.text-right
                                    %span.label.label-primary Randomize-able
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<block id="abc">X,Y,Z</block>')
                                    %br
                                    A single block located at <code>X,Y,Z</code>.
                                %td.text-right
                                    %span.label.label-primary Randomize-able
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<sphere id="abc" origin="X,Y,Z" radius="R"/>')
                                    %br
                                    A sphere located at <code>X,Y,Z</code> with a radius of <code>R</code>.
                                    %br
                                    %i Only block bounded when using a finite radius.
                                %td
                            %tr
                                %td{:colspan => "2"}
                                    %b Unbounded Regions
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<rectangle id="abc" min="X1,Z1" max="X2,Z2"/>')
                                    %br
                                    A rectangle from <code>X1,Z1</code> to <code>X2,Z2</code>.
                                %td
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<circle id="abc" center="X,Z" radius="R"/>')
                                    %br
                                    A circle located at <code>X,Z</code> with a radius of <code>R</code>. </br>
                                    %i The region goes from 0 to map height, i.e. PGM doesn't check the players Y position.
                                %td
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<half normal="1,0,1" origin="100,50,0" id="abc"/>')
                                    %br
                                    Half of the world split by a plane pointing towards a normal.
                                %td
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<below x="" y="" z="" id="abc"/>')
                                    |
                                    %pre
                                        %code= html_escape('<above x="" y="" z="" id="abc"/>')
                                    %br
                                    Half of the world split at the specified axis.
                                    %br
                                    If multiple axises are defined the specified parts of each axis are intersected and returned.
                                %td
                            %tr
                                %td{:colspan => "2"}
                                    %b Static Regions
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<empty/>')
                                    %br
                                    A zero size/position region, contains nothing.
                                %td
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<nowhere/>')
                                    %br
                                    A reference-able zero size/position region, contains nothing. Can be referenced with the ID: <code>nowhere</code>
                                %td
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<everywhere/>')
                                    %br
                                    A reference-able infinite size region, contains everything. Can be referenced with the ID: <code>everywhere</code>
                                %td

                :markdown
                    <br/>
                    #### Half-space Regions

                    A half-space region contains everything on one side of an arbitrary plane. The plane is defined by an origin point and a normal vector, and the region contains everything on the side of the plane that the normal is pointing towards. The example below defines a region with a diagonal boundary:

                        <half origin="5,0,0" normal="1,1,0"/>

                    The above and below regions can be used to conveniently define axis-aligned half-spaces:

                        <above y="50"/>         <!-- Everything above Y=50 -->
                        <below x="0" z="0"/>    <!-- Everything in the -X, -Z quadrant -->

                    <br/>
                    ### Applying Things to Regions

                    Filters, kits, and velocity changes can be applied to regions by using an `<apply>` element. The apply element can contain more than one region. If the apply element contains more than one region the same settings are applied to all of them. Applies with no region default to `<everywhere/>`. Applies can also be defined in the filters element.

                    The order in which apply elements are specified determines which takes precedence when regions overlap. Applies specified first override those specified further down in the XML. The region an apply affects can be specified as an attribute or in a <region> sub-element.

                    ##### Apply Element Attributes
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th{:style => "min-width: 175px;"} Attribute
                                %th Description
                                %th Value
                                %th Default
                        %tbody
                            %tr
                                %td
                                    %code region
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    The region this apply affects.
                                %td
                                    %a{:href => "/modules/regions"} Region
                                %td
                            %tr
                                %td
                                    %code enter
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter player enter events.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code leave
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter player leave events.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code block
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter block place and break events.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code block-place
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter block place events.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code block-place-against
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter block place against events.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code block-break
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter block break events.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code block-physics
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter world block updates; water flowing, portals disappearing, etc.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code use
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter right-click events.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                            %tr
                                %td
                                    %code message
                                %td Send a message to the player if the filter denies the event.
                                %td
                                    %span.label.label-primary String
                                %td
                            %tr
                                %td
                                    %code early-warning
                                %td Warn the player before they actually break a denied block.
                                %td
                                    %span.label.label-primary true/false
                                %td false
                            %tr
                                %td{:colspan => "4"}
                                    %b Apply Effects
                            %tr
                                %td
                                    %code kit
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Give a kit to players entering the region.
                                %td
                                    %a{:href => "/modules/kits"} Kit
                                %td
                            %tr
                                %td
                                    %code lend-kit
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Give a kit to players entering the region, and remove it when they leave the region.
                                    This can be used only with removable kits. Any non-removable kit will generate an error.
                                    The kits page explains which kit types are removable.
                                %td
                                    %a{:href => "/modules/kits"} Kit
                                %td
                            %tr
                                %td
                                    %code velocity
                                %td Change a players velocity when they enter the region.
                                %td
                                    %span.label.label-primary X,Y,Z
                                %td
                            %tr
                                %td
                                    %code filter
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Filter when/if kits and velocities are applied.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td

                :markdown
                    Apply Examples

                        <!-- Apply a blue team usage filter and referenced the region in an attribute. -->
                        <apply region="region1" use="blue-team-filter"/>

                        <apply kit="dark-tower-kit">
                            <region>
                                <!-- Multiple regions or region references in a regions sub-element. -->
                                <region id="region1"/>
                                <rectangle min="-5,-5" max="5,5"/>
                            </region>
                            <!-- Inline effect filter -->
                            <filter>
                                <team>blue</team>
                            </filter>
                        </apply>

                %p
                    %a.btn.btn-primary.btn-xs.btn-more.collapsed{:'data-target' => "#collapse-apply-example", :'data-toggle' => "collapse"} Examples
                %div.collapse{:id => "collapse-apply-example"}
                    :markdown
                            <!-- Give a kit to players entering the region. -->
                            <apply kit="knight">
                                <region>
                                    <region id="r-knight"/>
                                    <region id="b-knight"/>
                                </region>
                            </apply>

                            <!-- Only allow breaking of sandstone stairs and deny placing of all blocks. -->
                            <apply block-break="only-sandstone-stairs" block-place="never" message="You may not modify this area">
                                <region>
                                    <rectangle min="-6,-58" max="7,-47"/>
                                    <rectangle min="-6,48" max="7,59"/>
                                </region>
                            </apply>

                            <!-- Example regions from Harb using region modifiers. -->
                            <regions>
                                <rectangle id="main-area" min="-50,-32" max="51,33"/>
                                <union id="bases">
                                    <rectangle id="blue-base" min="-20,-62" max="21,-32"/>
                                    <rectangle id="red-base" min="-20,33" max="21,63"/>
                                </union>
                                <complement id="portals-area">
                                    <rectangle min="-56,-2" max="57,3"/>
                                    <region id="main-area"/>
                                </complement>

                                <!-- Protect portal areas -->
                                <apply block="never" region="portals-area"/>
                                <apply block="no-tnt" region="bases" message="You may not place TNT in the bases."/>
                            </regions>

                :markdown
                    An applies velocity attribute changes the players velocity when they enter the specified region. This velocity is specified as a `X,Y,Z` vector.
                    On the mapdev servers velocity can be tested with the `/vel x y z` command.

                    Partial example from [SuperPRISM](https://maps.oc.tc/TDM/Standard/SuperPRISM/map.xml), using velocity for jump pads

                        <regions>
                            <!--  Yellow Pads  -->
                            <apply velocity="-0.4,1.1,0.0">
                                <region>
                                    <cuboid min="-1081,1,-2116" max="-1078,2,-2113"/>
                                </region>
                            </apply>
                            <apply velocity="0.0,1.4,-0.4">
                                <region>
                                    <cuboid min="-1062,1,-2123" max="-1059,2,-2120"/>
                                </region>
                            </apply>
                        </regions>


                    <br/>
                    ### [Region Modifiers](id:regionModifiers)

                    Regions can be inverted, combined, subtracted, or intersected by putting them inside of the following elements.

                .table-responsive
                    %table.table.table-striped.table-condensed
                        %tbody
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<negative><region id="region1"/></negative>')
                                    %br
                                    Inverse of a region, the region or regions will no longer be considered block bounded.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape(' <union><region id="region1"/><region id="region2"/>..</union>')
                                    %br
                                    Combination of multiple regions.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<complement><region id="region1"/><region id="region2"/>..</complement>')
                                    %br
                                    Subtracts successive regions from the first defined region.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<intersect><region id="region1"/><region id="region2"/>..</intersect>')
                                    %br
                                    Returns the area that multiple regions intersect with.

                :markdown
                    ![Region Combinations .png](/img/regions.png)

                    Regions can be translated or mirrored with the following elements. When translating or mirroring a region the original is not modified instead a copy is created.

                    When mirroring a region the origin is the central point around which the region is mirrored. This point can be inside or outside the region being mirrored. The normal specifies which direction the region is being mirrored, e.g., `1,0,0` would mirror along the +X axis.

                .table-responsive
                    %table.table.table-striped.table-condensed
                        %tbody
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<translate offset="X,Y,Z"><region id="region1"/></translate>')
                                    %br
                                    Copy and translate a region by <code>X,Y,Z</code> blocks.
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<mirror normal="1,0,1" origin="100,50,0"><region id="region1"/></mirror>')
                                    %br
                                    Copy and mirror a region towards a normal around a point.

                :markdown
                    ![Region Mirror .png](/img/region_mirror.png)

                    <br/>
                    Examples

                        <!-- Region Union-->
                        <regions>
                            <!-- Blue Team Base -->
                            <apply enter="only-blue" message="You may not enter the enemy team's base!">
                                <region>
                                    <union>
                                        <cuboid min="-20,8,-75" max="11,41,-79"/>
                                        <cuboid min="8,8,-80" max="13,41,-75"/>
                                    </union>
                                </region>
                            </apply>
                        </regions>

                        <!-- Region Mirror -->
                        <regions>
                            <apply block="never" message="You may not under-bridge!">
                                <region>
                                    <cuboid id="red-underside" min="-oo,-oo,-oo" max="oo,41,40"/>
                                    <mirror origin="116,44,93" normal="0,0,1">
                                        <region id="red-underside"/>
                                    </mirror>
                                    <cuboid min="-oo,-oo,-oo" max="oo,37,oo"/>
                                </region>
                            </apply>
                        </regions>


                    <br/>
                    ### [Point Providers](id:pointProviders)

                    A point provider is used to return individual points inside a region. It can also be used to modify the position returned by a region to include the direction a player ends up facing when spawned, etc.
                    Input can be a region, a region modifier or simply an exact `X,Y,Z` coordinate.

                        <point yaw="90" pitch="50">X,Y,Z</point>

                    ##### Point Attributes
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Attribute
                                %th Description
                                %th Value
                        %tbody
                            %tr
                                %td
                                    %code region
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    The region the point provider modifies.
                                %td
                                    %a{:href => "/modules/regions"} Randomize-able Region
                            %tr
                                %td
                                    %code yaw
                                %td
                                    Specifies what direction the player is looking horizontally from -180&deg; to 180&deg;.
                                    %br
                                    %i South 0&deg;, East -90&deg;, North 180&deg; and West 90&deg;.
                                %td
                                    %span.label.label-primary -180 to 180
                            %tr
                                %td
                                    %code pitch
                                %td
                                    Specifies what direction the player is looking vertically from -90&deg; to 90&deg;.
                                    %br
                                    %i -90&deg; is straight up 90&deg; is straight down.
                                %td
                                    %span.label.label-primary -90 to 90
                            %tr
                                %td
                                    %code angle
                                %td
                                    Specify the exact block coordinates that the player should look at.
                                    %br
                                    %i This attribute will negate any angles set by the <code>yaw</code> and <code>pitch</code> attributes.
                                %td
                                    %span.label.label-primary X,Y,Z

                %h5 Point Sub-elements
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Element
                                %th Description
                                %th Value/Children
                            %tr
                                %td
                                    %pre
                                        %code= html_escape('<region>')
                                %td
                                    %span.label.label-default{:title => "Can be either this sub-element or an attribute."} Property
                                    The region or regions the point provider modifies.
                                %td
                                    %a{:href => "/modules/regions"} Randomize-able Regions
                :markdown

                    `NOTE:` The pitch and yaw arguments can also accept a `X,Y,Z` coordinate. <br/>
                    `TIP:` Copy the yaw and pitch from the F3 screen in minecraft (the `Facing: Direction (Axis) (Yaw/Pitch)` line).

